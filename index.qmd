[//]: # (# Avances de tesis.)

# Introducción

## Estacionamiento

- ¿Qué es el estacionamiento?
- ¿Por qué es importante?
- ¿Qué problemas presenta?
- ¿Cómo se puede mejorar?

![](/img/estfull.png)

[//]: # (acto de dejar un vehículo en reposo durante un período de tiempo determinado.)

[//]: # (permite a los conductores dejen sus vehículos de forma segura mientras realizan otras actividades)

[//]: # (en lugares concurridos, se torna complicado encontrar un lugar o lograr dirigir el vehículo para estacionar)

[//]: # (con la ayuda de tecnologías como visión computacional y aprendizaje automático se han desarrollado soluciones de asistencia al conductor que facilitan esta tarea)

## Sistemas de asistencia al conductor

<img src="/img/asistencia1.jpg" alt="" width="30%"/>
<img src="/img/reversa.jpeg" alt="" width="30%"/>
<img src="/img/reversa2.jpg" alt="" width="30%"/>

[//]: # (Los sistemas de asistencia al conductor son programas informáticos que proporcionan al conductor información sobre el entorno del vehículo)

[//]: # (Los hay tan avanzados que pueden estacionar el vehículo de forma autónoma y otros mas simples que 
solo proporcionan información sobre la distancia a objetos cercanos)

[//]: # (Una solución eficaz que pude contribuir a la mejora de estos sistemas es la inteligencia artificial
si una red neuronal aprendiera a estacionar un vehículo en un ambiente controlado, con este conocimiento
podría retornar información de utilidad para cumplir la tarea de estacionamiento)

## Aprendizaje por Refuerzo

:::: {.columns}

::: {.column width="50%"}
<img class="my-rl-diagram" src="/img/RL.svg" alt="" />
:::

::: {.column width="25%"}

- Agente  <img class="my-rl-list" src="/img/tesla.png" alt="" />
- Acciones <img class="my-rl-list" src="/img/actions.png" alt="" />
- Entorno <img class="my-rl-list" src="/img/park.png" alt="" />


:::

::: {.column width="25%"}

- Interprete <img class="my-rl-list" src="/img/cam.jpg" alt="" />
- Estado <img class="my-rl-list" src="/img/ubi.png" alt="" />
- Recompensa
<img class="my-rl-list-s" src="/img/sum.png" alt=""/> 
<img class="my-rl-list-s" src="/img/bien.png" alt=""/>
<img class="my-rl-list-s" src="/img/mas.png" alt=""/> 
<img class="my-rl-list-s" src="/img/mal.png" alt=""/>

:::
::::


[//]: # (dentro de la inteligencia artificial, Un buen candidato para esta situación 
son los algoritmos de aprendizaje por refuerzo)

[//]: # (estos algoritmos se basan en la interacción de un agente con un entorno)

[//]: # (el agente realiza acciones en un entorno y un interprete analiza como cambia el estado del entorno
el interprete le da una recompensa al agente dependiendo de la acción realizada
el agente aprende a realizar acciones que maximicen la recompensa)

[//]: # (en el caso de estacionamiento, el agente sería el vehículo,
las acciones serían las maniobras que puede realizar el vehículo, acelear, frenar, girar
el entorno sería el estacionamiento, 
el interprete sería un sistema que analize los datos de los sensores del veiculo, como la camara.
el estado podria ser la pose del vehículo,con respecto al estacionamiento
la recompensa podría ser una función que premie al vehículo por realizar una maniobra correcta y penalize por realizar una incorrecta)

[//]: # (que haria falta para implementar un algoitmo asi?
pues el agente, las acciones y el entorno nos lo puede proever un simulador
y el interprete, el estado y la recompensa lo podemos estimar con analisis de visión computacional)

# Metodología

## Entorno de simulación
### Carla Simulator 

:::: {.columns}

::: {.column width="50%"}
<iframe src="https://www.youtube.com/embed/q4V9GYjA1pE" width="100%" height="500"></iframe>
:::

::: {.column width="50%"}

<img class="my-list-s" src="/img/intel.png" alt=""/>
<img class="my-list-s" src="/img/tri.png" alt=""/>
<img class="my-list-s" src="/img/compvisioncenter.png" alt=""/>
<img class="my-list-s" src="/img/UnrealEngine.svg" alt=""/>
:::

::::



[//]: # (para simular el entorno de estacionamiento se utilizará el simulador Carla car learning to act por sus siglas en ingles)

[//]: # (Carla es un simulador de código abierto para la investigación de la conducción autónoma
incluye mapas de entornos urbanos con ciudades, carreteras , estacionamientos
asi como diversos actores como vehículos, peatones, semáforos o sensores
que proveen interfaces para manipular su comportamiento a conveniencia)


# python
```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
